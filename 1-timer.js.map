{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  timePicker: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate;\nrefs.startBtn.disabled = true;\n\nflatpickr(refs.timePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate - Date.now() <= 0) {\n      iziToast.error({\n        title: 'Incorrect data',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n\n      refs.startBtn.disabled = true;\n      return;\n    }\n\n    userSelectedDate = selectedDate;\n    refs.startBtn.disabled = false;\n  },\n});\n\nrefs.startBtn.addEventListener('click', element => {\n  refs.timePicker.disabled = true;\n  element.target.disabled = true;\n\n  const timerId = setInterval(() => {\n    const ms = userSelectedDate - Date.now();\n\n    if (ms <= 0) {\n      clearInterval(timerId);\n      refs.timePicker.disabled = false;\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(ms);\n\n    refs.days.textContent = addLeadingZero(days);\n    refs.hours.textContent = addLeadingZero(hours);\n    refs.minutes.textContent = addLeadingZero(minutes);\n    refs.seconds.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["refs","userSelectedDate","flatpickr","selectedDates","selectedDate","iziToast","element","timerId","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"0FAKA,MAAMA,EAAO,CACX,WAAY,SAAS,cAAc,kBAAkB,EACrD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EACJD,EAAK,SAAS,SAAW,GAEzBE,EAAUF,EAAK,WAAY,CACzB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEpC,GAAIC,EAAe,KAAK,IAAG,GAAM,EAAG,CAClCC,EAAS,MAAM,CACb,MAAO,iBACP,QAAS,qCACT,SAAU,UAClB,CAAO,EAEDL,EAAK,SAAS,SAAW,GACzB,MACD,CAEDC,EAAmBG,EACnBJ,EAAK,SAAS,SAAW,EAC1B,CACH,CAAC,EAEDA,EAAK,SAAS,iBAAiB,QAASM,GAAW,CACjDN,EAAK,WAAW,SAAW,GAC3BM,EAAQ,OAAO,SAAW,GAE1B,MAAMC,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAKP,EAAmB,KAAK,IAAG,EAEtC,GAAIO,GAAM,EAAG,CACX,cAAcD,CAAO,EACrBP,EAAK,WAAW,SAAW,GAC3B,MACD,CACD,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDR,EAAK,KAAK,YAAcc,EAAeL,CAAI,EAC3CT,EAAK,MAAM,YAAcc,EAAeJ,CAAK,EAC7CV,EAAK,QAAQ,YAAcc,EAAeH,CAAO,EACjDX,EAAK,QAAQ,YAAcc,EAAeF,CAAO,CAClD,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUL,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}